[metadata]
name = pyepics
provides = epics
description = Epics Channel Access for Python
long_description =
    Python Interface to the Epics Channel Access protocol of the
    Epics control system.   PyEpics provides 3 layers of access to
    Channel Access (CA):

    1. a light wrapping of the CA C library calls, using ctypes. This
       provides a procedural CA library in which the user is expected
       to manage Channel IDs. It is mostly provided as a foundation
       upon which higher-level access is built.
    2. PV() (Process Variable) objects, which represent the basic object
       in CA, allowing one to keep a persistent connection to a remote
       Process Variable.
    3. A simple set of functions caget(), caput() and so on to mimic
      the CA command-line tools and give the simplest access to CA.

    In addition, the library includes convenience classes to define
    Devices -- collections of PVs that might represent an Epics Record
    or physical device (say, a camera, amplifier, or power supply), and
    to help write GUIs for CA.

author = Matthew Newville
author_email = newville@cars.uchicago.edu
license = Epics Open License
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering
    Operating System :: OS Independent
    License :: Free for non-commercial use
    License :: Freely Distributable
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: CPython
keywords = epics
project_urls =
    Source = https://github.com/pyepics/pyepics/
    Documentation = http://pyepics.github.io/pyepics/
    Tracker = https://github.com/pyepics/pyepics/issues

[options]
python_requires = >=3.9
setup_requires = setuptools_scm
include_package_data = True
packages =
    epics
    epics.autosave
    epics.compat
    epics.clibs
    epics.devices
    epics.qt
    epics.wx
    epics.clibs.darwin64
    epics.clibs.darwinarm64
    epics.clibs.linux64
    epics.clibs.linux32
    epics.clibs.linuxarm
    epics.clibs.win64
    epics.clibs.win32
install_requires =
    setuptools
    numpy
    pyparsing
    importlib_resources; python_version<="3.8"

[options.extras_require]
doc =
    Sphinx
    numpydoc
test =
    coverage
    pytest
    pytest-cov
    psutil; platform_system=="Linux"
all =
    %(test)s
    %(doc)s

[tool:pytest]
addopts = --cov=epics --cov-append --cov-report html
